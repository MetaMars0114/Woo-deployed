{"version":3,"sources":["api/backend.js","actions/actions.js","components/Login.js","api/utils.js","components/encryptionhelper.js","components/Settings.js","components/MainPage.js","components/App.js","reducers/reducers.js","index.js"],"names":["axios","create","baseURL","utils","require","client","Client","fetchLogin","dispatch","cookies","Cookies","logged_user","undefined","get","backend","post","username","token","type","response","data","status","database","getAccounts","hive_data","voting_power","Math","ceil","getvotingpower","downvoting_power","downvotingpower","vp_threshold","dv_threshold","min_payout","revote","payload","login","next_week","Date","setDate","getDate","name","profile_image","set","path","expires","avatar","fetchTrails","fetchWhitelist","fetchHitlist","fetchExecutedVotes","addToTrail","trailed","ratio","trail_type","length","toast","error","addToWhitelist","addToCounterDvBlacklist","addToHitlist","author","percent","removeTrail","removeWhitelist","removeCounterDvBlacklist","removeHitlist","saveSettings","user","settings","JSON","stringify","info","setDvThreshold","threshold","setVpThreshold","setMinPayout","payout","setRevote","logout","remove","unvote","permlink","login_keychain","encrypted_username","console","log","account","dhive","encryptionHelper","sanitize","steem","config","LoginParking","state","loginType","showBnt","login_hivesigner","window","open","display_login_keychain","props","hive_keychain","requestHandshake","setState","send_login_token","keychain","getting_fetch_memo","memo_fetching","requestVerifyKey","message","success","dragon","walletConnect","event","preventDefault","auth","posting","account_auths","filter","el","requestAddAccountAuthority","this","className","id","src","alt","style","width","color","onSubmit","placeholder","contentEditable","value","onChange","target","onClick","backgroundColor","marginTop","border","borderRadius","React","Component","usernameHive","hive_username","pub_key","key_auths","encoded_message","encrypt","encrypted","iv","memo","encode","text","initialisation_vector","Promise","resolve","get_encryption_data","json_iv","parse","toString","encText","encryptText","key","getKeyAndIV","encryption_data","split","map","Number","buf","Buffer","from","vue","Uint8Array","connect","module","exports","totalShares","parseFloat","vesting_shares","received_vesting_shares","delegated_vesting_shares","vesting_withdraw_rate","elapsed","floor","now","voting_manabar","last_update_time","maxMana","currentMana","current_mana","downvote_manabar","crypto","CryptoJS","EncryptionHelper","CIPHERS","pseudoRandomBytes","err","ivBuffer","keyBuffer","cipher_alg","encoding","AES","decryptText","decrypt","Joi","Settings","trail_username","trail_ratio","hitlist_percent","hitlist_min_payout","trailed_schema","object","keys","string","min","max","required","number","whitelist_schema","counter_dv_blacklist_schema","hitlist_schema","remove_trail","remove_whitelist","remove_counter_dv_blacklist","remove_hitlist","save_settings","save_min_payout","saveMinPayout","render_negative_trails","rows","i","push","negative_trail","render_positive_trails","positive_trail","render_whitelist","whitelist","render_counter_downvote_blacklist","counter_dv_blacklist","render_hitlist","hitlist","render_counter_downvote_trail","counter_trail","add_trail","test","validate","details","add_whitelist","add_counter_dv_blacklist","add_hitlist","compareDates","a","b","moment","unix","render_votes","integratedSortingColumnExtensions","columnName","compare","renderRows","columns","title","defaultCurrentPage","pageSize","defaultSorting","direction","columnExtensions","showSortingControls","reason","e","trail","votes","vote_history","button","loading","sizeUnit","size","vote_date","date","format","parse_vote_reason","rel","href","fontSize","position","top","percentage","marginLeft","data-toggle","data-target","aria-controls","aria-expanded","aria-label","role","checked","float","Tabs","defaultActiveKey","transition","Tab","eventKey","step","scope","queryString","MainPage","login_refresh","origin","location","search","addEventListener","Login","configure","autoClose","App","exact","component","_","combineReducers","action","new_state","cloneDeep","vote","store","createStore","reducers","applyMiddleware","thunk","ReactDOM","render","document","querySelector"],"mappings":"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","file":"static/js/main.883b3a8b.chunk.js","sourcesContent":["import axios from 'axios';\n\nexport default axios.create({\n    baseURL: \"http://localhost:4002\"//process.env.NODE_ENV === \"production\" ? 'https://back.downvotecontrol.com' : \"http://localhost:4002\"\n});\n\n","import backend from \"../api/backend\";\nimport Cookies from \"universal-cookie\";\nimport { toast } from \"react-toastify\";\nimport 'react-toastify/dist/ReactToastify.min.css';\n\nconst utils = require(\"../api/utils\");\n\nvar dhive = require('@hivechain/dhive');\nvar client = new dhive.Client('https://anyx.io');\n\nconst fetchLogin = () => async (dispatch) => {\n\n    const cookies = new Cookies();\n\n    let logged_user = \"\";\n    if (cookies.get(\"username\") !== undefined && cookies.get(\"token\") !== undefined && cookies.get(\"type\") !== undefined) {\n        const response = (await backend.post('/auth/user',\n            { username: cookies.get(\"username\"), token: cookies.get(\"token\"), type: cookies.get(\"type\") })).data;\n\n        if (response.status === \"ok\") {\n\n            let hive_data = await client.database.getAccounts([cookies.get(\"username\")]);\n\n            hive_data = hive_data[0];\n\n            logged_user = {\n                username: cookies.get(\"username\"),\n                token: cookies.get(\"token\"),\n                hive_data: hive_data,\n                voting_power: Math.ceil(utils.getvotingpower(hive_data) * 100) / 100,\n                downvoting_power: Math.ceil(utils.downvotingpower(hive_data) * 100) / 100,\n                vp_threshold: response.vp_threshold,\n                dv_threshold: response.dv_threshold,\n                min_payout: response.min_payout,\n                revote: response.revote,\n                type: cookies.get(\"type\"),\n\n            };\n        }\n    }\n\n    dispatch({\n        type: 'FETCH_LOGIN',\n        payload: logged_user\n    });\n};\n\n\nconst login = (data) => async (dispatch) => {\n\n    const cookies = new Cookies();\n\n    let next_week = new Date();\n\n    next_week.setDate(next_week.getDate() + 14);\n\n    let name = data.name;\n    let profile_image = \"https://steemitimages.com/u/\" + name + \"/avatar\";\n\n    cookies.set('username', data.username, { path: '/', expires: next_week });\n    cookies.set('token', data.token, { path: '/', expires: next_week });\n    cookies.set('type', \"hivesigner\", { path: '/', expires: next_week });\n\n    let hive_data = await client.database.getAccounts([data.username]);\n\n    hive_data = hive_data[0];\n\n    let logged_user = {\n        username: data.username,\n        token: data.token,\n        avatar: profile_image,\n        hive_data: hive_data,\n        voting_power: Math.ceil(utils.getvotingpower(hive_data) * 100) / 100,\n        downvoting_power: Math.ceil(utils.downvotingpower(hive_data) * 100) / 100,\n        vp_threshold: data.vp_threshold,\n        dv_threshold: data.dv_threshold,\n        min_payout: data.min_payout,\n        revote: data.revote,\n        type: \"hivesigner\"\n    };\n\n    dispatch({\n        type: 'LOGIN',\n        payload: logged_user\n    });\n};\n\nconst fetchTrails = (username, token, type) => async (dispatch) => {\n\n    const response = (await backend.post('/settings/get_trail',\n        { username: username, token: token, type: type })).data;\n\n    if (response.status === \"ok\") {\n        return dispatch({\n            type: 'FETCH_TRAILS',\n            payload: response.data\n        });\n    }\n};\n\nconst fetchWhitelist = (username, token, type) => async (dispatch) => {\n\n    const response = (await backend.post('/settings/get_whitelist',\n        { username: username, token: token, type: type })).data;\n\n    if (response.status === \"ok\") {\n        return dispatch({\n            type: 'FETCH_WHITELIST',\n            payload: response.data\n        });\n    }\n};\n\nconst fetchCounterDvBlacklist = (username, token, type) => async (dispatch) => {\n\n    const response = (await backend.post('/settings/get_counter_dv_blacklist',\n        { username: username, token: token, type: type })).data;\n\n    if (response.status === \"ok\") {\n        return dispatch({\n            type: 'FETCH_COUNTER_DV_BLACKLIST',\n            payload: response.data\n        });\n    }\n};\n\nconst fetchHitlist = (username, token, type) => async (dispatch) => {\n\n    const response = (await backend.post('/settings/get_hitlist',\n        { username: username, token: token, type: type })).data;\n\n    if (response.status === \"ok\") {\n        return dispatch({\n            type: 'FETCH_HITLIST',\n            payload: response.data\n        });\n    }\n};\n\nconst fetchExecutedVotes = (username, token, type) => async (dispatch) => {\n\n    const response = (await backend.post('/settings/get_vote_history',\n        { username: username, token: token, type: type })).data;\n\n    if (response.status === \"ok\") {\n        return dispatch({\n            type: 'FETCH_VOTES',\n            payload: response.data\n        });\n    }\n};\n\n\nconst addToTrail = (username, token, type, trailed, ratio, trail_type) => async (dispatch) => {\n\n    let account = await client.database.getAccounts([trailed]);\n\n    if (account.length === 0) {\n        toast.error(\"User \" + trailed + \" doesn't exists\");\n        return;\n    }\n\n    const response = (await backend.post('/settings/add_trail',\n        { username: username, token: token, type, trailed, ratio, trail_type })).data;\n\n    if (response.status === \"ok\") {\n        return dispatch({\n            type: 'ADD_TRAIL',\n            payload: {\n                username,\n                trailed,\n                ratio,\n                trail_type\n            }\n        });\n    } else {\n        if (response.error === \"already exists\") {\n            toast.error(\"This user is already trailed, either in a negative or a normal trail\")\n        }\n    }\n};\n\nconst addToWhitelist = (username, token, type, trailed) => async (dispatch) => {\n    let account = await client.database.getAccounts([trailed]);\n\n    if (account.length === 0) {\n        toast.error(\"User \" + trailed + \" doesn't exists\");\n        return;\n    }\n\n    const response = (await backend.post('/settings/add_whitelist',\n        { username: username, token: token, type, trailed })).data;\n\n    if (response.status === \"ok\") {\n        return dispatch({\n            type: 'ADD_WHITELIST',\n            payload: {\n                username,\n                trailed\n            }\n        });\n    } else {\n        if (response.error === \"already exists\") {\n            toast.error(\"This user is already in the whitelist\")\n        }\n    }\n};\n\n\nconst addToCounterDvBlacklist = (username, token, type, trailed) => async (dispatch) => {\n    let account = await client.database.getAccounts([trailed]);\n\n    if (account.length === 0) {\n        toast.error(\"User \" + trailed + \" doesn't exists\");\n        return;\n    }\n\n    const response = (await backend.post('/settings/add_counter_dv_blacklist',\n        { username: username, token: token, type, trailed })).data;\n\n    if (response.status === \"ok\") {\n        return dispatch({\n            type: 'ADD_COUNTER_DV_BLACKLIST',\n            payload: {\n                username,\n                trailed\n            }\n        });\n    } else {\n        if (response.error === \"already exists\") {\n            toast.error(\"This user is already in the counter downvote blacklist\")\n        }\n    }\n};\n\n\nconst addToHitlist = (username, token, type, author, percent, min_payout) => async (dispatch) => {\n    let account = await client.database.getAccounts([author]);\n\n    if (account.length === 0) {\n        toast.error(\"User \" + author + \" doesn't exists\");\n        return;\n    }\n\n    const response = (await backend.post('/settings/add_hitlist',\n        { username: username, token: token, type, author, percent, min_payout })).data;\n\n    if (response.status === \"ok\") {\n        return dispatch({\n            type: 'ADD_HITLIST',\n            payload: {\n                username,\n                author,\n                percent,\n                min_payout\n            }\n        });\n    } else {\n        if (response.error === \"already exists\") {\n            toast.error(\"This user is already in the hitlist\")\n        }\n    }\n};\n\n\nconst removeTrail = (username, token, type, trailed, trail_type) => async (dispatch) => {\n\n    const response = (await backend.post('/settings/remove_trail',\n        { username: username, token: token, type, trailed, trail_type })).data;\n\n    if (response.status === \"ok\") {\n        return dispatch({\n            type: 'REMOVE_TRAIL',\n            payload: {\n                trailed,\n                trail_type\n            }\n        });\n    }\n};\n\nconst removeWhitelist = (username, token, type, trailed) => async (dispatch) => {\n\n    const response = (await backend.post('/settings/remove_whitelist',\n        { username: username, token: token, type, trailed })).data;\n\n    if (response.status === \"ok\") {\n        return dispatch({\n            type: 'REMOVE_WHITELIST',\n            payload: {\n                trailed\n            }\n        });\n    }\n};\n\nconst removeCounterDvBlacklist = (username, token, type, trailed) => async (dispatch) => {\n\n    const response = (await backend.post('/settings/remove_counter_dv_blacklist',\n        { username: username, token: token, type, trailed })).data;\n\n    if (response.status === \"ok\") {\n        return dispatch({\n            type: 'REMOVE_COUNTER_DV_BLACKLIST',\n            payload: {\n                trailed\n            }\n        });\n    }\n};\n\nconst removeHitlist = (username, token, type, author) => async (dispatch) => {\n\n    const response = (await backend.post('/settings/remove_hitlist',\n        { username: username, token: token, type, author })).data;\n\n    if (response.status === \"ok\") {\n        return dispatch({\n            type: 'REMOVE_HITLIST',\n            payload: {\n                author\n            }\n        });\n    }\n};\n\nconst saveSettings = (user) => async () => {\n    const response = (await backend.post('/settings/update_user_settings',\n        {\n            username: user.username,\n            token: user.token,\n            type: user.type,\n            settings: JSON.stringify({\n                dv_threshold: user.dv_threshold,\n                vp_threshold: user.vp_threshold,\n                min_payout: user.min_payout,\n                revote: user.revote,\n            }),\n        })).data;\n\n    if (response.status === \"ok\")\n        toast.info(\"Settings saved\");\n};\n\nconst setDvThreshold = (threshold) => async (dispatch) => {\n    return dispatch({\n        type: 'SET_DV_THRESHOLD',\n        payload: threshold\n    });\n};\n\nconst setVpThreshold = (threshold) => async (dispatch) => {\n    return dispatch({\n        type: 'SET_VP_THRESHOLD',\n        payload: threshold\n    });\n};\n\nconst setMinPayout = (payout) => async (dispatch) => {\n    return dispatch({\n        type: 'SET_PAYOUT',\n        payload: payout\n    });\n};\n\nconst setRevote = () => async (dispatch) => {\n\n    return dispatch({\n        type: 'SET_REVOTE',\n    });\n};\n\nconst logout = (username, token, type) => async (dispatch) => {\n    const cookies = new Cookies();\n\n    cookies.remove(\"login\");\n    cookies.remove(\"username\");\n    cookies.remove(\"token\");\n\n    await backend.post('/auth/logout', { username: username, token: token, type: type });\n\n    dispatch({\n        type: 'LOGOUT',\n        payload: \"\"\n    });\n};\n\nconst unvote = (username, token, type, author, permlink) => async (dispatch) => {\n\n    dispatch({\n        type: 'UNVOTING',\n        payload: { author: author, permlink: permlink }\n    });\n\n    let data = (await backend.post('/settings/unvote', { username, token, type, author, permlink })).data;\n\n    if (data.status === \"ko\") {\n        dispatch({\n            type: 'UNVOTE_FAIL',\n            payload: { author: author, permlink: permlink }\n        });\n        toast.error(data.data);\n    } else {\n        toast.info(\"Successfully unvoted @\" + author + \"/\" + permlink);\n        dispatch({\n            type: 'UNVOTE',\n            payload: { author: author, permlink: permlink }\n        });\n    }\n};\n\nconst login_keychain = (username, encrypted_username) => async (dispatch) => {\n\n    let data = (await backend.post('/auth/keychain/login', { username, encrypted_username })).data;\n    console.log('data in login_keychain of action', data)\n\n    if (data.status === \"ok\") {\n        data = data.account;\n\n        const cookies = new Cookies();\n\n        let next_week = new Date();\n\n        next_week.setDate(next_week.getDate() + 14);\n\n        let profile_image = \"https://steemitimages.com/u/\" + username + \"/avatar\";\n\n        cookies.set('username', data.username, { path: '/', expires: next_week });\n        cookies.set('token', data.token, { path: '/', expires: next_week });\n        cookies.set('type', \"keychain\", { path: '/', expires: next_week });\n\n        let hive_data = await client.database.getAccounts([username]);\n\n        hive_data = hive_data[0];\n\n        let logged_user = {\n            username: username,\n            token: data.token,\n            avatar: profile_image,\n            hive_data: hive_data,\n            voting_power: Math.ceil(utils.getvotingpower(hive_data) * 100) / 100,\n            downvoting_power: Math.ceil(utils.downvotingpower(hive_data) * 100) / 100,\n            vp_threshold: data.vp_threshold,\n            dv_threshold: data.dv_threshold,\n            min_payout: data.min_payout,\n            type: \"keychain\",\n            revote: data.revote,\n        };\n\n        dispatch({\n            type: 'LOGIN',\n            payload: logged_user\n        });\n    }\n\n\n\n};\n\n\n\nexport {\n\n    fetchLogin,\n    login,\n    fetchTrails,\n    addToTrail,\n    removeTrail,\n    saveSettings,\n    setDvThreshold,\n    setVpThreshold,\n    logout,\n    setMinPayout,\n    login_keychain,\n    addToWhitelist,\n    fetchWhitelist,\n    removeWhitelist,\n    fetchHitlist,\n    removeHitlist,\n    addToHitlist,\n    fetchExecutedVotes,\n    unvote,\n    setRevote,\n    addToCounterDvBlacklist,\n    fetchCounterDvBlacklist,\n    removeCounterDvBlacklist\n\n\n};","import React from \"react\";\nimport { login, login_keychain } from \"../actions/actions\"\nimport { connect } from \"react-redux\";\nconst dhive = require('@hivechain/dhive');\nconst encryptionHelper = require(\"./encryptionhelper\");\nconst sanitize = require(\"xss\");\nconst client = new dhive.Client('https://anyx.io');\nconst steem = require('steem');\nrequire('dotenv').config();\nconst algorithm = \"aes-128-cbc\";\nclass LoginParking extends React.Component {\n\n    state = { username: \"\", error: \"\", loginType: \"\", showBnt: true };\n    client = new dhive.Client('https://anyx.io');\n    login_hivesigner = () => {\n        window.open(process.env.NODE_ENV === \"production\" ? 'https://back.downvotecontrol.com/auth' : \"http://localhost:4002/auth\", '', ' scrollbars=yes,menubar=no,width=447,height=614, resizable=yes,toolbar=no,location=no,status=no')\n    };\n\n    display_login_keychain = () => {\n\n        console.log('props.logged_user', this.props.logged_user)\n\n        if (window.hive_keychain) {\n\n            let keychain = window.hive_keychain\n\n            keychain.requestHandshake(() => {\n                this.setState({ loginType: \"keychain\" });\n            });\n\n        } else {\n            this.setState({ error: \"You do not have hive keychain installed\" });\n        }\n    };\n\n    send_login_token = async () => {\n\n        let keychain = window.hive_keychain;\n        // let memo = (await backend.post('/auth/keychain/fetch_memo', { username: this.state.username })).data;\n        let memo_fetching= await getting_fetch_memo(this.state.username);\n        // console.log('memo', memo);\n        console.log(\"memo_fetching in send_login_token\", memo_fetching);\n        if (memo_fetching.status === \"ok\") {\n            keychain.requestVerifyKey(this.state.username, memo_fetching.message, \"Posting\", (response) => {\n                if (response.success === true) {\n                    // this.props.login_keychain(this.state.username, response.result);\n                    console.log('log in successed::: ', this.state.username);\n                    window.dragon.walletConnect(this.state.username);\n                }\n            });\n        } else {\n            this.setState({ error: \"There was an error while fetching_memo\" });\n        }\n\n    };\n\n    login_keychain = async (event) => {\n        event.preventDefault();\n        \n\n        if (window.hive_keychain) {\n            let keychain = window.hive_keychain;\n\n            keychain.requestHandshake(() => {\n                this.setState({ loginType: \"keychain\" });\n            });\n\n            let data = await this.client.database.getAccounts([this.state.username]);\n            if (data.length === 1) {\n\n                let auth = data[0].posting.account_auths.filter(el => el[0] === \"downvote-tool\");\n                console.log('auth in login_keychain', auth);\n\n                if (auth.length === 0) {\n\n                    keychain.requestAddAccountAuthority(this.state.username, \"downvote-tool\", \"posting\", 1, (response) => {\n                        console.log('requestAddAccountAuthority in login_keychain', response);\n\n                        if (response.success === true)\n                            this.send_login_token();\n                        else\n                            this.setState({ error: \"Keychain error\" });\n                    });\n                } else {\n                    this.send_login_token();\n                }\n            } else {\n                this.setState({ error: \"Hive user not found\" });\n            }\n        } else {\n            this.setState({ error: \"You do not have hive keychain installed\" });\n        }\n    };\n\n    render() {\n\n        return (\n            <>\n                {this.state.showBnt &&\n                    <div className=\"wrapper fadeInDown\" id=\"keychain-modal\">\n                        <div id=\"formContent\">\n\n                            <div className=\"fadeIn first\">\n                                <img src=\"./hive_symbol.png\" alt=\"hive icon\" style={{ width: \"150px\" }} />\n                            </div>\n\n                            <br />\n                            <span style={{ color: \"red\" }}>{this.state.error}</span>\n\n                            <form onSubmit={this.login_keychain}>\n                                <input type={\"text\"} placeholder={\"Username\"} contentEditable=\"true\" value={this.state.username} onChange={(event) => this.setState({ username: event.target.value })} />\n\n                                <button type={\"button\"} className=\"btn btn-primary \" onClick={this.login_keychain} style={{\n                                    backgroundColor: \"white\",\n                                    color: \"#999999\",\n                                    width: \"235px\",\n                                    marginTop: \"20px\",\n                                    border: \"1px solid #999999\",\n                                    borderRadius: \"0\"\n                                }}>Log in with keychain\n                                </button>\n                            </form>\n                        </div>\n                    </div>\n                }\n            </>\n        )\n    }\n\n}\n\nasync function getting_fetch_memo(usernameHive)  {\n    const hive_username = sanitize(usernameHive);\n\n    if (hive_username && hive_username.length < 16 && hive_username.length > 3) {\n        let data = await client.database.getAccounts([hive_username]);\n\n        console.log(\"data in getting fetch memo\", data);\n        \n        let pub_key = data[0].posting.key_auths[0][0];\n\n        if (data.length === 1) {\n            let encoded_message = \"\";\n                \n            let { encrypted, iv } = await encrypt(hive_username);\n            encrypted = \"#\" + encrypted;\n            let wif = \"5JRMuVZhkeE32Wfu1r62hr7jGdbmsXMPkgtC2Uid3pvhk9YSaQr\";//have to insert in env\n            encoded_message = steem.memo.encode(wif, pub_key, encrypted);\n            console.log(\"encoded_message\", encoded_message);\n            return ({ status: \"ok\", message: encoded_message });\n           \n\n        } else {\n            return({ status: \"ko\" });\n        }\n    }\n};\n\nfunction encrypt(text, initialisation_vector) {\n    return new Promise(async resolve => {\n        console.log(\"in resolve\");\n        let data;\n        let iv;\n        console.log(\"initialisation_vector\",initialisation_vector)\n        if (initialisation_vector) {\n            data = await get_encryption_data(initialisation_vector);\n            iv = initialisation_vector;\n            console.log(\"data\", data);\n        }\n        else {\n            data = await get_encryption_data();\n            console.log(\"data\", data);\n            let json_iv = JSON.stringify(data['iv']);\n            json_iv = JSON.parse(json_iv);\n\n            if (!json_iv.data)\n                console.log(json_iv);\n\n            iv = json_iv.data.toString();\n        }\n\n        // console.log(\"in encrypt:\", algorithm);\n\n        //const encText = encryptionHelper.encryptText(data.key, data.iv);\n        console.log('before encrypt:', text, data.iv.toString())\n        const encText = encryptionHelper.encryptText(algorithm, data.key, data.iv, text, \"hex\");\n        let encrypted = \"#\" + encText;\n        console.log('after encrypt:', encrypted)\n\n        return resolve({ encrypted: encText, iv: iv });\n    });\n}\n\nfunction get_encryption_data(iv) {\n    console.log(\"get_encryption_data\", get_encryption_data);\n    return new Promise(async resolve => {\n        let encryption_pw = \"1234567890123456\";\n        let encryption_data = await encryptionHelper.getKeyAndIV(encryption_pw);//(process.env.ENCRYPTION_PW);//have to insert in env\n        if (iv) {\n            iv = iv.split(\",\").map(Number);\n            const buf = Buffer.from(iv);\n            const vue = new Uint8Array(buf);\n            encryption_data['iv'] = vue;\n            return resolve(encryption_data);\n        }\n        else\n            return resolve(encryption_data);\n    });\n}\n\n\nconst mapStateToProps = (state) => {\n    return {\n        logged_user: state.user\n    };\n};\n\nexport default connect(mapStateToProps, { login, login_keychain })(LoginParking);","\nfunction getvotingpower(account) {\n    const totalShares = parseFloat(account.vesting_shares) + parseFloat(account.received_vesting_shares) - parseFloat(account.delegated_vesting_shares) - parseFloat(account.vesting_withdraw_rate);\n\n    const elapsed = Math.floor(Date.now() / 1000) - account.voting_manabar.last_update_time;\n    const maxMana = totalShares * 1000000;\n    // 432000 sec = 5 days\n    let currentMana = parseFloat(account.voting_manabar.current_mana) + elapsed * maxMana / 432000;\n\n    if (currentMana > maxMana) {\n        currentMana = maxMana;\n    }\n\n    const currentManaPerc = currentMana * 100 / maxMana;\n\n    return (currentManaPerc);\n}\n\nfunction downvotingpower(account) {\n    const totalShares = parseFloat(account.vesting_shares) + parseFloat(account.received_vesting_shares) - parseFloat(account.delegated_vesting_shares) - parseFloat(account.vesting_withdraw_rate);\n\n    const elapsed = Math.floor(Date.now() / 1000) - account.downvote_manabar.last_update_time;\n    const maxMana = totalShares * 1000000 / 4;\n    // 432000 sec = 5 days\n    let currentMana = parseFloat(account.downvote_manabar.current_mana) + elapsed * maxMana / 432000;\n\n    if (currentMana > maxMana) {\n        currentMana = maxMana;\n    }\n\n    const currentManaPerc = currentMana * 100 / maxMana;\n\n    return (currentManaPerc);\n}\n\n\nmodule.exports = {\n    getvotingpower,\n    downvotingpower\n}","\"use strict\";\nrequire('dotenv').config()\nvar crypto = require(\"crypto\");\nvar CryptoJS = require(\"crypto-js\");\n\nvar EncryptionHelper = (function () {\n\n    function getKeyAndIV(key) {\n\n        return new Promise(resolve => {\n            crypto.pseudoRandomBytes(16, function (err, ivBuffer) {\n               \n                var keyBuffer = (key instanceof Buffer) ? key : Buffer.from(key);\n                console.log(\"in getKeyAndIV\", keyBuffer);\n\n                return resolve({\n                    iv: ivBuffer,\n                    key: keyBuffer\n                });\n            });\n        });\n    }\n\n    function encryptText(cipher_alg, key, iv, text, encoding) {\n        // var cipher = crypto.createCipheriv(cipher_alg, key, iv);\n\n        // encoding = encoding || \"binary\";\n\n        // var result = cipher.update(text, \"utf8\", encoding);\n        // result += cipher.final(encoding);\n\n        // return result;\n\n\n        var encrypted = CryptoJS.AES.encrypt(text, iv.toString());\n\n        return encrypted;\n\n    }\n\n    function decryptText(cipher_alg, key, iv, text, encoding) {\n\n        var decrypted = CryptoJS.AES.decrypt(text, iv.toString());\n        return decrypted;\n    }\n\n    return {\n        CIPHERS: {\n            \"AES_128\": \"aes128\",          //requires 16 byte key\n            \"AES_128_CBC\": \"aes-128-cbc\", //requires 16 byte key\n            \"AES_192\": \"aes192\",          //requires 24 byte key\n            \"AES_256\": \"aes256\"           //requires 32 byte key\n        },\n        getKeyAndIV: getKeyAndIV,\n        encryptText: encryptText,\n        decryptText: decryptText\n    };\n})();\n\nmodule.exports = EncryptionHelper;","import React from 'react';\nimport { connect } from \"react-redux\";\nimport Tabs from \"react-bootstrap/Tabs\";\nimport Tab from \"react-bootstrap/Tab\";\nimport {\n    login,\n    fetchLogin,\n    fetchTrails,\n    fetchExecutedVotes,\n    unvote,\n    setVpThreshold,\n    fetchHitlist,\n    removeHitlist,\n    addToHitlist,\n    addToTrail,\n    removeTrail,\n    logout,\n    setMinPayout,\n    addToWhitelist,\n    fetchWhitelist,\n    removeWhitelist,\n    setDvThreshold,\n    saveSettings, setRevote, addToCounterDvBlacklist, removeCounterDvBlacklist\n} from \"../actions/actions\";\n//fetchCounterDvBlacklist\nimport { toast } from \"react-toastify\";\nimport 'react-toastify/dist/ReactToastify.css';\nimport \"@devexpress/dx-react-grid\";\nimport { Grid, PagingPanel, SearchPanel, Table, TableHeaderRow, Toolbar } from \"@devexpress/dx-react-grid-bootstrap4\";\nimport { IntegratedFiltering, IntegratedPaging, PagingState, SearchState, IntegratedSorting, SortingState } from \"@devexpress/dx-react-grid\";\nimport '@devexpress/dx-react-grid-bootstrap4/dist/dx-react-grid-bootstrap4.css';\nimport { SyncLoader } from 'react-spinners';\nimport moment from 'moment';\n\nconst Joi = require('joi');\n\nclass Settings extends React.Component {\n    state = { trail_username: \"\", trail_ratio: 1, hitlist_percent: 50, hitlist_min_payout: 5 };\n\n    async componentDidMount() {\n        this.props.fetchTrails(this.props.logged_user.username, this.props.logged_user.token, this.props.logged_user.type);\n        this.props.fetchWhitelist(this.props.logged_user.username, this.props.logged_user.token, this.props.logged_user.type);\n        this.props.fetchHitlist(this.props.logged_user.username, this.props.logged_user.token, this.props.logged_user.type);\n        // this.props.fetchCounterDvBlacklist(this.props.logged_user.username, this.props.logged_user.token, this.props.logged_user.type);\n        this.props.fetchExecutedVotes(this.props.logged_user.username, this.props.logged_user.token, this.props.logged_user.type);\n    };\n\n    trailed_schema = Joi.object().keys({\n        username: Joi.string().min(3).max(16).required(),\n        ratio: Joi.number().min(0.01).max(2.5),\n    });\n\n    whitelist_schema = Joi.object().keys({\n        username: Joi.string().min(3).max(16).required(),\n    });\n\n    counter_dv_blacklist_schema = Joi.object().keys({\n        username: Joi.string().min(3).max(16).required(),\n    });\n\n    hitlist_schema = Joi.object().keys({\n        username: Joi.string().min(3).max(16).required(),\n        percent: Joi.number().min(0.01).max(100),\n        min_payout: Joi.number().min(0.01),\n    });\n\n\n    remove_trail = (trailed, type) => {\n        this.props.removeTrail(this.props.logged_user.username, this.props.logged_user.token, this.props.logged_user.type, trailed, type);\n    };\n\n    remove_whitelist = (author) => {\n        this.props.removeWhitelist(this.props.logged_user.username, this.props.logged_user.token, this.props.logged_user.type, author);\n    };\n\n    remove_counter_dv_blacklist = (author) => {\n        this.props.removeCounterDvBlacklist(this.props.logged_user.username, this.props.logged_user.token, this.props.logged_user.type, author);\n    };\n\n    remove_hitlist = (author) => {\n        this.props.removeHitlist(this.props.logged_user.username, this.props.logged_user.token, this.props.logged_user.type, author);\n    };\n\n    save_settings = (event) => {\n        event.preventDefault();\n\n        this.props.saveSettings(this.props.logged_user);\n\n    };\n\n    save_min_payout = (event) => {\n        event.preventDefault();\n        this.props.saveMinPayout(this.props.logged_user.username, this.props.logged_user.token, this.props.logged_user.type, this.props.logged_user.min_payout);\n    };\n\n\n    render_negative_trails = () => {\n        let rows = [];\n        for (let i = 0; i < this.props.data.negative_trail.length; i++) {\n            rows.push(<tr>\n                <td>{this.props.data.negative_trail[i].trailed}</td>\n                <td>{this.props.data.negative_trail[i].ratio}</td>\n                <td><button className={\"btn btn-primary\"} onClick={() => this.remove_trail(this.props.data.negative_trail[i].trailed, -1)}>Delete</button></td>\n            </tr>)\n        }\n\n        return rows\n\n    };\n\n    render_positive_trails = () => {\n        let rows = [];\n        for (let i = 0; i < this.props.data.positive_trail.length; i++) {\n            rows.push(<tr>\n                <td>{this.props.data.positive_trail[i].trailed}</td>\n                <td>{this.props.data.positive_trail[i].ratio}</td>\n                <td><button className={\"btn btn-primary\"} onClick={() => this.remove_trail(this.props.data.positive_trail[i].trailed, 1)}>Delete</button></td>\n            </tr>)\n        }\n\n        return rows\n    };\n\n    render_whitelist = () => {\n        let rows = [];\n        for (let i = 0; i < this.props.data.whitelist.length; i++) {\n            rows.push(<tr>\n                <td>{this.props.data.whitelist[i].trailed}</td>\n                <td><button className={\"btn btn-primary\"} onClick={() => this.remove_whitelist(this.props.data.whitelist[i].trailed)}>Delete</button></td>\n            </tr>)\n        }\n\n        return rows\n    };\n\n    render_counter_downvote_blacklist = () => {\n        let rows = [];\n\n        for (let i = 0; i < this.props.data.counter_dv_blacklist.length; i++) {\n            rows.push(<tr>\n                <td>{this.props.data.counter_dv_blacklist[i].trailed}</td>\n                <td><button className={\"btn btn-primary\"} onClick={() => this.remove_counter_dv_blacklist(this.props.data.counter_dv_blacklist[i].trailed)}>Delete</button></td>\n            </tr>)\n        }\n\n        return rows\n    };\n\n    render_hitlist = () => {\n        let rows = [];\n        for (let i = 0; i < this.props.data.hitlist.length; i++) {\n            rows.push(<tr>\n                <td>{this.props.data.hitlist[i].author}</td>\n                <td>{this.props.data.hitlist[i].percent} %</td>\n                <td>{this.props.data.hitlist[i].min_payout} $</td>\n                <td><button className={\"btn btn-primary\"} onClick={() => this.remove_hitlist(this.props.data.hitlist[i].author)}>Delete</button></td>\n            </tr>)\n        }\n\n        return rows\n    };\n\n    render_counter_downvote_trail = () => {\n        let rows = [];\n        for (let i = 0; i < this.props.data.counter_trail.length; i++) {\n            rows.push(<tr>\n                <td>{this.props.data.counter_trail[i].trailed}</td>\n                <td>{this.props.data.counter_trail[i].ratio}</td>\n                <td><button className={\"btn btn-primary\"} onClick={() => this.remove_trail(this.props.data.counter_trail[i].trailed, 2)}>Delete</button></td>\n            </tr>)\n        }\n\n        return rows\n\n    };\n\n    add_trail = (event, type) => {\n        event.preventDefault();\n        let test = Joi.validate({ username: this.state.trail_username, ratio: this.state.trail_ratio }, this.trailed_schema);\n        if (test.error === null)\n            this.props.addToTrail(this.props.logged_user.username, this.props.logged_user.token, this.props.logged_user.type, this.state.trail_username, this.state.trail_ratio, type);\n        else\n            toast.error(test.error.details[0].message);\n    };\n\n    add_whitelist = (event) => {\n        event.preventDefault();\n        let test = Joi.validate({ username: this.state.trail_username }, this.whitelist_schema);\n\n        if (test.error === null)\n            this.props.addToWhitelist(this.props.logged_user.username, this.props.logged_user.token, this.props.logged_user.type, this.state.trail_username);\n        else\n            toast.error(test.error.details[0].message);\n    };\n\n    add_counter_dv_blacklist = (event) => {\n        event.preventDefault();\n        let test = Joi.validate({ username: this.state.trail_username }, this.counter_dv_blacklist_schema);\n\n        if (test.error === null)\n            this.props.addToCounterDvBlacklist(this.props.logged_user.username, this.props.logged_user.token, this.props.logged_user.type, this.state.trail_username);\n        else\n            toast.error(test.error.details[0].message);\n    };\n\n    add_hitlist = (event) => {\n        event.preventDefault();\n        let test = Joi.validate({ username: this.state.trail_username, percent: this.state.hitlist_percent, min_payout: this.state.hitlist_min_payout }, this.hitlist_schema);\n\n        if (test.error === null)\n            this.props.addToHitlist(this.props.logged_user.username, this.props.logged_user.token, this.props.logged_user.type, this.state.trail_username, this.state.hitlist_percent, this.state.hitlist_min_payout);\n        else\n            toast.error(test.error.details[0].message);\n    };\n\n    logout = () => {\n        this.props.logout(this.props.logged_user.username, this.props.logged_user.token, this.props.logged_user.type);\n    };\n\n    unvote = (username, permlink) => {\n\n        this.props.unvote(this.props.logged_user.username, this.props.logged_user.token, this.props.logged_user.type, username, permlink);\n    };\n\n    parse_vote_reason(reason, type) {\n        try {\n            reason = JSON.parse(reason);\n        } catch (e) {\n            return { trailed: \"error\", reason: \"error\" }\n        }\n\n        if (type < 3 && reason.trail !== null) {\n            let trail = reason.trail;\n\n            if (type === -1)\n                return { trailed: trail.trailed, reason: \"counter upvote\" };\n            else if (type === 1)\n                return { trailed: trail.trailed, reason: \"trailed downvote\" };\n            else if (type === 2)\n                return { trailed: trail.trailed, reason: \"countered downvote\" };\n        } else if (type === 3 && reason.hitlist !== null)\n            return { trailed: reason.hitlist.author, reason: \"hitlist\" };\n\n        return { trailed: \"error\", reason: \"error\" }\n    }\n\n    renderRows() {\n        let votes = this.props.data.vote_history;\n        let rows = [];\n\n        for (let i = 0; i < votes.length; i++) {\n\n            let button = \"Unvote\";\n\n            if (votes[i].loading === true) {\n                button = <div className='sweet-loading'>\n                    <SyncLoader\n\n                        sizeUnit={\"px\"}\n                        size={4}\n                        color={'#ffffff'}\n                        loading={true}\n                    />\n                </div>\n            }\n\n            let vote_date = moment.unix(votes[i].date).format(\"DD/MM/YY HH:mm\");\n\n            let reason = this.parse_vote_reason(votes[i].reason, votes[i].type);\n            rows.push({\n                author: votes[i].author,\n                permlink: <span><a rel=\"noopener noreferrer\" target={\"_blank\"} href={\"https://hive.blog/@\" + votes[i].author + \"/\" + votes[i].permlink}> {votes[i].permlink}</a> <br /> <a style={{ fontSize: \"10px\", position: \"relative\", top: \"-10px\" }} rel=\"noopener noreferrer\" target={\"_blank\"} href={\"https://hiveblocks.com/@\" + votes[i].author + \"/\" + votes[i].permlink}> view in hiveblocks</a></span>,\n                percentage: (reason.reason !== \"hitlist\" ? votes[i].percentage / 100 + \" %\" : votes[i].percentage + \" %\"),\n                trailed: reason.trailed,\n                reason: reason.reason,\n                date: vote_date,\n                unvote: <button className={\"btn btn-primary\"} style={{ marginLeft: \"5px\" }} onClick={() => this.unvote(votes[i].author, votes[i].permlink)}>{button}</button>,\n            })\n        }\n\n\n        return rows;\n\n    }\n\n    compareDates = (a, b) => {\n        return (moment(a, \"DD/MM/YY HH:mm\").unix() < moment(b, \"DD/MM/YY HH:mm\").unix()) ? -1 : 1;\n    };\n\n    render_votes = () => {\n\n        const integratedSortingColumnExtensions = [\n            { columnName: 'date', compare: this.compareDates },\n        ];\n\n        let columns = [\n            { name: \"date\", title: \"date (d/m/y)\" },\n            { name: \"author\", title: \"author\" },\n            { name: \"permlink\", title: \"permlink\" },\n            { name: \"percentage\", title: \"percentage\" },\n            { name: \"reason\", title: \"reason\" },\n            { name: \"trailed\", title: \"voter\" },\n            { name: \"unvote\", title: \" \" },\n        ];\n\n        return (\n            <Grid rows={this.renderRows()} columns={columns}>\n                <SearchState />\n                <IntegratedFiltering />\n                <PagingState\n                    defaultCurrentPage={0}\n                    pageSize={15}\n                />\n                <SortingState\n                    defaultSorting={[{ columnName: 'date', direction: 'desc' }]}\n                />\n                <IntegratedSorting columnExtensions={integratedSortingColumnExtensions} />\n                <IntegratedPaging />\n\n                <Table />\n                <Toolbar />\n                <SearchPanel />\n                <TableHeaderRow showSortingControls />\n                <PagingPanel />\n\n\n            </Grid>\n        )\n    }\n\n    render() {\n        return (\n            <div>\n                <nav className=\"navbar navbar-expand-md navbar-dark bg-dark fixed-top\">\n                    <a className=\"navbar-brand\" href=\"#\">Downvote Control Tool</a>\n                    <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\"\n                        data-target=\"#navbarsExampleDefault\" aria-controls=\"navbarsExampleDefault\"\n                        aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n                        <span className=\"navbar-toggler-icon\" />\n                    </button>\n\n                    <div className=\"collapse navbar-collapse\" id=\"navbarsExampleDefault\">\n                        <ul className=\"navbar-nav mr-auto\">\n                            <a href={\"#\"} onClick={this.logout}>logout</a>\n                        </ul>\n\n                    </div>\n                </nav>\n\n                <main role=\"main\" className=\"container\">\n                    <h3> Logged in as :  {this.props.logged_user.username}</h3>\n                    <p> Current voting power is : {this.props.logged_user.voting_power} % <br />\n                        Current downvoting power is : {this.props.logged_user.downvoting_power} %</p>\n                    <br />\n\n                    <h4>Global settings : </h4>\n\n                    <form onSubmit={(e) => this.save_settings(e)}>\n                        <p>Only use automatic downvote votes when power is above :\n                            <input type={\"number\"} style={{ width: \"60px\" }} max={100} min={0} value={this.props.logged_user.dv_threshold} onChange={(e) => this.props.setDvThreshold(e.target.value)} /> %\n\n                        </p>\n                        <p>If my downvoting power reaches 0, use my voting power to downvote when my power is above :\n                            <input type={\"number\"} style={{ width: \"60px\" }} max={100} min={0} value={this.props.logged_user.vp_threshold} onChange={(e) => this.props.setVpThreshold(e.target.value)} /> %\n                            <br /><small>This setting also applies when upvoting to counter downvotes</small>\n                        </p>\n\n                        <p>Only downvote if the post has more than  :\n\n                            <input type={\"number\"} style={{ width: \"60px\" }} min={0} value={this.props.logged_user.min_payout} onChange={(e) => this.props.setMinPayout(e.target.value)} />\n                            $ of pending payouts.\n                            <br /><small>Posts with 0$ payout won't be downvoted</small>\n                        </p>\n                        <p><input type={\"checkbox\"} checked={this.props.logged_user.revote === true} onChange={this.props.setRevote} />   Re-vote if there is the opportunity to increase the upvote or downvote.\n                            <br />This is useful to counter people that will do a small upvote to bait auto downvotes and then revote with a higher percentage.\n\n                            <button style={{ float: \"right\" }} onClick={(e) => this.save_settings(e)} className={\"btn btn-primary\"}>Save settings</button>\n                        </p>\n                    </form>\n                    <hr />\n                    <Tabs defaultActiveKey=\"trail\" id=\"modal-tab\" transition={false} >\n\n                        <Tab eventKey=\"trail\" title=\"Trail\" >\n                            <h5> Follow downvote trail </h5>\n                            <p> Allows you to trail the downvotes of a specific account and thus downvote any content they downvote at a given rate relative to the size of their downvote.</p>\n                            <p>Example: If you choose to trail <b>@abuse.control</b> with rating 0.75, then if  <b>@abuse.control</b> gives a <b>50%</b> downvote to a post you will give the same post a <b>37.5%</b> downvote.</p>\n\n                            <form onSubmit={(e) => this.add_trail(e, 1)}>\n                                <input type={\"text\"} placeholder={\"username\"} value={this.state.trail_username} onChange={(e) => this.setState({ trail_username: e.target.value })} />\n                                <input type={\"number\"} min={0.01} max={2.5} step={0.01} style={{ width: \"60px\" }} value={this.state.trail_ratio} onChange={(e) => this.setState({ trail_ratio: e.target.value })} />\n                                <button className={\"btn  btn-primary\"} onClick={(e) => this.add_trail(e, 1)}>Add</button>\n                            </form>\n                            <table className=\"table\">\n                                <thead>\n                                    <tr>\n                                        <th scope=\"col\">Username</th>\n                                        <th scope=\"col\">Ratio</th>\n                                        <th scope=\"col\">Delete</th>\n                                    </tr>\n                                </thead>\n                                <tbody>\n                                    {this.render_positive_trails()}\n\n                                </tbody>\n                            </table>\n\n                        </Tab>\n\n                        <Tab eventKey=\"counter_upvotes\" title=\"Counter upvotes \" >\n                            <h5> Counter upvotes </h5>\n                            <p> Used to counteract upvotes from specified accounts, meaning that you will downvote anything that they choose to upvote at a given rate relative to their upvote. </p>\n                            <p>Example: If you choose to counter upvote <b>@baduser</b>r with rating 1.2, then if <b>@baduser</b> gives a 50% upvote to something, you will add a <b>60%</b> downvote to the same post or comment, while a rating of 0.5 would make you downvote <b>25%</b>, etc.\n                                <br />\n                                <br />\n                                Note that if your settings would make you use more voting power than necessary downvotecontrol will adapt dynamically the vote percentage when voting, so that you counter the upvote fully.\n                            </p>\n                            <form onSubmit={(e) => this.add_trail(e, -1)}>\n                                <input type={\"text\"} placeholder={\"username\"} value={this.state.trail_username} onChange={(e) => this.setState({ trail_username: e.target.value })} />\n                                <input type={\"number\"} min={0} max={2.5} step={0.1} style={{ width: \"60px\" }} value={this.state.trail_ratio} onChange={(e) => this.setState({ trail_ratio: e.target.value })} />\n                                <button className={\"btn btn-primary\"} onClick={(e) => this.add_trail(e, -1)} >Add</button>\n                            </form>\n                            <table className=\"table\">\n                                <thead>\n                                    <tr>\n                                        <th scope=\"col\">Username</th>\n                                        <th scope=\"col\">Ratio</th>\n                                        <th scope=\"col\">Delete</th>\n                                    </tr>\n                                </thead>\n                                <tbody>\n                                    {this.render_negative_trails()}\n\n                                </tbody>\n                            </table>\n                        </Tab>\n                        <Tab eventKey=\"counter_downvotes\" title=\"Counter downvotes \" >\n                            <h5> Counter downvotes </h5>\n                            <p> Used to counteract downvotes from specified accounts, meaning that you will upvote anything that they choose to downvote at a given rate relative to their downvote. </p>\n                            <p>Example: If you choose to counter downvote <b>@baduser</b>r with rating 1.2, then if <b>@baduser</b> gives a 50% downvote on something, you will do a <b>60%</b> upvote to the same post or comment, while a rating of 0.5 would make you upvote at <b>25%</b>, etc.\n                                <br />\n                                <br />\n                                Note that if your settings would make you use more voting power than necessary downvotecontrol will adapt dynamically the vote percentage when voting, so that you counter the downvote fully.\n                            </p>\n\n                            <form onSubmit={(e) => this.add_trail(e, 2)}>\n                                <input type={\"text\"} placeholder={\"username\"} value={this.state.trail_username} onChange={(e) => this.setState({ trail_username: e.target.value })} />\n                                <input type={\"number\"} min={0} max={2.5} step={0.1} style={{ width: \"60px\" }} value={this.state.trail_ratio} onChange={(e) => this.setState({ trail_ratio: e.target.value })} />\n                                <button className={\"btn btn-primary\"} onClick={(e) => this.add_trail(e, 2)} >Add</button>\n                            </form>\n                            <table className=\"table\">\n                                <thead>\n                                    <tr>\n                                        <th scope=\"col\">Username</th>\n                                        <th scope=\"col\">Ratio</th>\n                                        <th scope=\"col\">Delete</th>\n                                    </tr>\n                                </thead>\n                                <tbody>\n                                    {this.render_counter_downvote_trail()}\n\n                                </tbody>\n                            </table>\n                        </Tab>\n                        <Tab eventKey=\"counter_dv_blacklist\" title=\"Counter downvotes blacklist\" >\n                            <h5> Counter downvotes blacklist </h5>\n                            <p>Counter downvotes author blacklist, you won't counter the downvotes if the reciever of the vote is in this list. Separate each user by a comma <br /></p>\n                            <form onSubmit={this.add_counter_dv_blacklist}>\n                                <input type={\"text\"} placeholder={\"username\"} value={this.state.trail_username} onChange={(e) => this.setState({ trail_username: e.target.value })} />\n                                <button className={\"btn btn-primary\"} onClick={this.add_counter_dv_blacklist} >Add</button>\n                            </form>\n                            <table className=\"table\">\n                                <thead>\n                                    <tr>\n                                        <th scope=\"col\">Username</th>\n                                        <th scope=\"col\">Delete</th>\n                                    </tr>\n                                </thead>\n                                <tbody>\n                                    {this.render_counter_downvote_blacklist()}\n\n                                </tbody>\n                            </table>\n                        </Tab>\n                        <Tab eventKey=\"whitelist\" title=\"Whitelist\" >\n                            <h5> Whitelist </h5>\n                            <p>You won't downvote the users in this list</p>\n                            <form onSubmit={this.add_whitelist}>\n                                <input type={\"text\"} placeholder={\"username\"} value={this.state.trail_username} onChange={(e) => this.setState({ trail_username: e.target.value })} />\n                                <button className={\"btn btn-primary\"} onClick={this.add_whitelist} >Add</button>\n                            </form>\n                            <table className=\"table\">\n                                <thead>\n                                    <tr>\n                                        <th scope=\"col\">Username</th>\n                                        <th scope=\"col\">Delete</th>\n                                    </tr>\n                                </thead>\n                                <tbody>\n                                    {this.render_whitelist()}\n\n                                </tbody>\n                            </table>\n                        </Tab>\n                        <Tab eventKey=\"hitlist\" title=\"Hit list\" >\n                            <h5> Hist list </h5>\n                            <p>Downvote user using x% whenever his post or comment reaches more than y$ (the number of dollar is the one in the global settings) </p>\n                            <p>For instance you can configure the tool to downvote user @milkinguser whenever he makes more than 5$ on a post or comment with a 30% downvote</p>\n                            Downvote\n                            <form onSubmit={() => this.add_hitlist}>\n                                <input type={\"text\"} placeholder={\"username\"} value={this.state.trail_username} onChange={(e) => this.setState({ trail_username: e.target.value })} />\n                                With a\n                                <input type={\"number\"} style={{ width: \"60px\" }} min={0.1} max={100} value={this.state.hitlist_percent} onChange={(e) => this.setState({ hitlist_percent: e.target.value })} />\n                                % downvote if his post has a payout superior to\n                                <input type={\"number\"} style={{ width: \"60px\" }} value={this.state.hitlist_min_payout} onChange={(e) => this.setState({ hitlist_min_payout: e.target.value })} /> $\n\n                                <button className={\"btn btn-primary\"} style={{ marginLeft: \"5px\" }} onClick={this.add_hitlist} >Add</button>\n                            </form>\n                            <table className=\"table\">\n                                <thead>\n                                    <tr>\n                                        <th scope=\"col\">Username</th>\n                                        <th scope=\"col\">downvote percent</th>\n                                        <th scope=\"col\">Minimum payout</th>\n                                        <th scope=\"col\">Delete</th>\n                                    </tr>\n                                </thead>\n                                <tbody>\n                                    {this.render_hitlist()}\n                                </tbody>\n                            </table>\n                        </Tab>\n                        <Tab eventKey=\"vote_history\" title=\"Vote history\" >\n                            <h5>Vote history </h5>\n                            <p>Here's the history of all the votes you made though this tool</p>\n                            {this.render_votes()}\n                        </Tab>\n                    </Tabs>\n                </main>\n            </div>\n        )\n\n    }\n\n}\n\n\nconst mapStateToProps = (state) => {\n    return {\n        logged_user: state.user,\n        data: state.data,\n    };\n};\n\nexport default connect(mapStateToProps, { login, unvote, removeCounterDvBlacklist, logout, fetchLogin, fetchWhitelist, addToCounterDvBlacklist, fetchExecutedVotes, saveSettings, setRevote, fetchTrails, addToTrail, addToHitlist, removeHitlist, removeTrail, setDvThreshold, setVpThreshold, setMinPayout, addToWhitelist, removeWhitelist, fetchHitlist })(Settings);//fetchCounterDvBlacklist","import React from 'react';\nimport { connect } from \"react-redux\";\n\nimport { } from \"../actions/actions\"\nimport Login from \"./Login\";\nimport Settings from \"./Settings\";\nimport { login } from \"../actions/actions\";\nimport { fetchLogin } from \"../actions/actions\";\nconst queryString = require('query-string');\n\n\nclass MainPage extends React.Component {\n\n    \n    login_refresh = (event) => {\n        if (event.origin !== \"http://localhost:4002\" && event.origin !== \"https://back.downvotecontrol.com\")\n            return;\n\n        let data = {};\n\n        try {\n            data = JSON.parse(event.data);\n            this.props.login(data);\n        } catch (e) {\n        }\n    };\n\n    async componentDidMount() {\n        const params = queryString.parse(this.props.location.search);\n\n        this.props.fetchLogin();\n\n        window.addEventListener(\"message\", this.login_refresh);\n    }\n\n    render() {\n\n        if (this.props.logged_user === \"\" ) {\n\n            return (\n                <Login />\n            )\n        } else {\n            return (\n                <Settings />\n            )\n        }\n    }\n\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        logged_user: state.user,\n    };\n};\n\nexport default connect(mapStateToProps, { login, fetchLogin })(MainPage);","import React from 'react';\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\nimport MainPage from \"./MainPage\";\nimport { toast } from 'react-toastify';\ntoast.configure({\n    autoClose: 2500,\n});\n\nclass App extends React.Component {\n    render() {\n\n        return (\n            <Router>\n                <Route path={`/`} exact component={MainPage} />\n            </Router>\n        )\n    }\n}\n\nexport default App;","import { combineReducers } from \"redux\";\n\nconst _ = require('lodash');\n\nconst userReducer = (state = \"\", action) => {\n\n    if (action.type === \"LOGIN\") {\n        console.log('called Login reducer==========', action.payload)\n        return action.payload;\n    } else if (action.type === \"FETCH_LOGIN\") {\n        return action.payload;\n    } else if (action.type === \"LOGOUT\") {\n        return \"\"\n    } else if (action.type === \"SET_DV_THRESHOLD\") {\n        let new_state = _.cloneDeep(state);\n\n        new_state.dv_threshold = action.payload;\n        return new_state\n    } else if (action.type === \"SET_VP_THRESHOLD\") {\n        let new_state = _.cloneDeep(state);\n\n        new_state.vp_threshold = action.payload;\n        return new_state\n    } else if (action.type === \"SET_PAYOUT\") {\n        let new_state = _.cloneDeep(state);\n\n        new_state.min_payout = action.payload;\n        return new_state\n    } else if (action.type === \"SET_REVOTE\") {\n        let new_state = _.cloneDeep(state);\n\n        if (state.revote === undefined)\n            new_state.revote = true;\n        else\n            new_state.revote = !state.revote;\n\n        return new_state\n    }\n\n    return state;\n};\n\nconst dataReducer = (state = { negative_trail: \"\", positive_trail: \"\", counter_trail: \"\", whitelist: \"\", hitlist: \"\", vote_history: \"\", counter_dv_blacklist: \"\" }, action) => {\n\n    if (action.type === \"FETCH_TRAILS\") {\n        let new_state = _.cloneDeep(state);\n\n        new_state.positive_trail = action.payload.filter(el => el.type === 1);\n        new_state.negative_trail = action.payload.filter(el => el.type === -1);\n        new_state.counter_trail = action.payload.filter(el => el.type === 2);\n\n        return new_state\n    } else if (action.type === \"ADD_TRAIL\") {\n        let new_state = _.cloneDeep(state);\n\n        let trail = action.payload;\n\n        if (trail.trail_type === 1) {\n            new_state.positive_trail.push(action.payload);\n        } else if (trail.trail_type === -1) {\n            new_state.negative_trail.push(action.payload);\n        } else if (trail.trail_type === 2) {\n            new_state.counter_trail.push(action.payload);\n        }\n\n        return new_state\n    } else if (action.type === \"REMOVE_TRAIL\") {\n        let new_state = _.cloneDeep(state);\n\n        let trail = action.payload;\n\n        if (trail.trail_type === 1)\n            new_state.positive_trail = state.positive_trail.filter(el => el.trailed !== trail.trailed);\n        else if (trail.trail_type === -1)\n            new_state.negative_trail = state.negative_trail.filter(el => el.trailed !== trail.trailed);\n        else if (trail.trail_type === 2)\n            new_state.counter_trail = state.counter_trail.filter(el => el.trailed !== trail.trailed);\n\n        return new_state\n    } else if (action.type === \"FETCH_WHITELIST\") {\n        let new_state = _.cloneDeep(state);\n        new_state.whitelist = action.payload;\n        return new_state\n    } else if (action.type === \"FETCH_COUNTER_DV_BLACKLIST\") {\n        let new_state = _.cloneDeep(state);\n        new_state.counter_dv_blacklist = action.payload;\n        return new_state\n    } else if (action.type === \"ADD_WHITELIST\") {\n        let new_state = _.cloneDeep(state);\n        new_state.whitelist.push(action.payload);\n        return new_state\n    } else if (action.type === \"ADD_COUNTER_DV_BLACKLIST\") {\n        let new_state = _.cloneDeep(state);\n        new_state.counter_dv_blacklist.push(action.payload);\n        return new_state\n    } else if (action.type === \"ADD_HITLIST\") {\n        let new_state = _.cloneDeep(state);\n        new_state.hitlist.push(action.payload);\n        return new_state\n    } else if (action.type === \"REMOVE_WHITELIST\") {\n        let new_state = _.cloneDeep(state);\n        new_state.whitelist = state.whitelist.filter(el => el.trailed !== action.payload.trailed);\n        return new_state\n    } else if (action.type === \"REMOVE_COUNTER_DV_BLACKLIST\") {\n        let new_state = _.cloneDeep(state);\n        new_state.counter_dv_blacklist = state.counter_dv_blacklist.filter(el => el.trailed !== action.payload.trailed);\n        return new_state\n    } else if (action.type === \"FETCH_HITLIST\") {\n        let new_state = _.cloneDeep(state);\n        new_state.hitlist = action.payload;\n        return new_state\n    } else if (action.type === \"REMOVE_HITLIST\") {\n        let new_state = _.cloneDeep(state);\n        new_state.hitlist = state.hitlist.filter(el => el.author !== action.payload.author);\n        return new_state\n    } else if (action.type === \"FETCH_VOTES\") {\n        let new_state = _.cloneDeep(state);\n        new_state.vote_history = action.payload.map(el => { el.loading = false; return el });\n        return new_state\n    } else if (action.type === \"UNVOTE\") {\n        let new_state = _.cloneDeep(state);\n        new_state.vote_history = state.vote_history.filter(el => el.author !== action.payload.author && el.permlink !== action.payload.permlink);\n        return new_state\n    } else if (action.type === \"UNVOTING\") {\n        let new_state = _.cloneDeep(state);\n\n        for (let i = 0; i < new_state.vote_history.length; i++) {\n            let vote = new_state.vote_history[i];\n\n            if (vote.author === action.payload.author && vote.permlink === action.payload.permlink)\n                new_state.vote_history[i].loading = true;\n        }\n\n        return new_state\n    } else if (action.type === \"UNVOTE_FAIL\") {\n        let new_state = _.cloneDeep(state);\n\n        for (let i = 0; i < new_state.vote_history.length; i++) {\n            let vote = new_state.vote_history[i];\n\n            if (vote.author === action.payload.author && vote.permlink === action.payload.permlink)\n                new_state.vote_history[i].loading = false;\n        }\n\n        return new_state\n    }\n\n\n    return state;\n\n};\n\n\n\nexport default combineReducers({\n    user: userReducer,\n    data: dataReducer\n})","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport {Provider} from 'react-redux'\nimport {applyMiddleware, createStore} from 'redux'\nimport thunk from 'redux-thunk'\nimport App from './components/App'\nimport reducers from \"./reducers/reducers\";\nconst store = createStore(reducers, applyMiddleware(thunk));\n\n\n\nReactDOM.render(\n    <Provider store={store}>\n        <App/>\n    </Provider>\n    , document.querySelector('#root')\n);\n\n"],"sourceRoot":""}